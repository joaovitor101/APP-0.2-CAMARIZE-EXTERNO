#!/usr/bin/env node

import { spawn } from 'child_process';
import net from 'net';

console.log('üîç Verificando se os servi√ßos est√£o rodando...\n');

// Fun√ß√£o para verificar se uma porta est√° em uso
function checkPort(port, serviceName) {
  return new Promise((resolve) => {
    const client = new net.Socket();
    
    client.connect(port, 'localhost', () => {
      console.log(`‚úÖ ${serviceName} est√° rodando na porta ${port}`);
      client.destroy();
      resolve(true);
    });
    
    client.on('error', () => {
      console.log(`‚ùå ${serviceName} N√ÉO est√° rodando na porta ${port}`);
      console.log(`   Execute: npm run dev-${serviceName.toLowerCase()}`);
      client.destroy();
      resolve(false);
    });
    
    // Timeout de 3 segundos
    setTimeout(() => {
      console.log(`‚è∞ Timeout ao verificar ${serviceName} na porta ${port}`);
      client.destroy();
      resolve(false);
    }, 3000);
  });
}

// Fun√ß√£o principal
async function main() {
  console.log('üìã Verificando servi√ßos...\n');
  
  const apiRunning = await checkPort(4000, 'API');
  const frontendRunning = await checkPort(3000, 'Frontend');
  
  console.log('\nüìä Status dos servi√ßos:');
  console.log(`   API (porta 4000): ${apiRunning ? '‚úÖ Rodando' : '‚ùå Parado'}`);
  console.log(`   Frontend (porta 3000): ${frontendRunning ? '‚úÖ Rodando' : '‚ùå Parado'}`);
  
  console.log('\nüöÄ Recomenda√ß√µes:');
  
  if (!apiRunning && !frontendRunning) {
    console.log('   ‚Ä¢ Nenhum servi√ßo est√° rodando');
    console.log('   ‚Ä¢ Execute: npm run start-simple (recomendado)');
    console.log('   ‚Ä¢ OU execute: npm run dev-both');
  } else if (!apiRunning) {
    console.log('   ‚Ä¢ API n√£o est√° rodando');
    console.log('   ‚Ä¢ Execute: npm run dev-api');
  } else if (!frontendRunning) {
    console.log('   ‚Ä¢ Frontend n√£o est√° rodando');
    console.log('   ‚Ä¢ Execute: npm run dev-front');
  } else {
    console.log('   ‚Ä¢ Todos os servi√ßos est√£o rodando!');
    console.log('   ‚Ä¢ Pode iniciar o ngrok: npm run start-ngrok-both');
  }
  
  console.log('\nüí° Dica: Use "npm run start-simple" para iniciar tudo automaticamente!');
}

main().catch(console.error);
