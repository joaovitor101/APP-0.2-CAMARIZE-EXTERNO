// Exemplo de como funciona a valida√ß√£o de email no cadastro de usu√°rios

/*
Quando um usu√°rio tenta se cadastrar, o sistema agora:

1. ‚úÖ Verifica se o email j√° existe no banco
2. üîç Valida se o email realmente existe (formato + dom√≠nio + SMTP)
3. üìß S√≥ permite o cadastro se o email for v√°lido

Exemplos de cen√°rios:

=== CEN√ÅRIO 1: Email v√°lido ===
POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "joao@gmail.com",
  "senha": "123456"
}

‚úÖ RESULTADO: Usu√°rio cadastrado com sucesso
üìß LOG: "‚úÖ [REGISTER] Email validado com sucesso"

=== CEN√ÅRIO 2: Email inv√°lido (formato) ===
POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "joao@",
  "senha": "123456"
}

‚ùå RESULTADO: Erro 400
üìß LOG: "‚ùå [REGISTER] Email inv√°lido: Formato de email inv√°lido"
üí¨ MENSAGEM: "Email inv√°lido: Formato de email inv√°lido. Por favor, verifique se o email est√° correto."

=== CEN√ÅRIO 3: Email inv√°lido (dom√≠nio inexistente) ===
POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "joao@dominioinexistente.com",
  "senha": "123456"
}

‚ùå RESULTADO: Erro 400
üìß LOG: "‚ùå [REGISTER] Email inv√°lido: Dom√≠nio n√£o possui servidores de email v√°lidos"
üí¨ MENSAGEM: "Email inv√°lido: Dom√≠nio n√£o possui servidores de email v√°lidos. Por favor, verifique se o email est√° correto."

=== CEN√ÅRIO 4: Email com aviso ===
POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "joao@empresa.com",
  "senha": "123456"
}

‚ö†Ô∏è RESULTADO: Usu√°rio cadastrado (com aviso)
üìß LOG: "‚ö†Ô∏è [REGISTER] Aviso na valida√ß√£o do email: Formato v√°lido e dom√≠nio com MX, mas n√£o foi poss√≠vel verificar via SMTP"

=== CEN√ÅRIO 5: Email j√° cadastrado ===
POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "joao@gmail.com", // j√° existe
  "senha": "123456"
}

‚ùå RESULTADO: Erro 400
üìß LOG: "‚ùå [REGISTER] Usu√°rio j√° existe: joao@gmail.com"
üí¨ MENSAGEM: "Usu√°rio com o email 'joao@gmail.com' j√° existe. Tente usar um email diferente ou fa√ßa login."

=== CEN√ÅRIO 6: Valida√ß√£o desabilitada ===
# No arquivo .env:
VALIDATE_EMAIL_ON_REGISTER=false

POST /users/register
{
  "nome": "Jo√£o Silva",
  "email": "email_invalido",
  "senha": "123456"
}

‚úÖ RESULTADO: Usu√°rio cadastrado (sem valida√ß√£o)
üìß LOG: "‚è≠Ô∏è [REGISTER] Valida√ß√£o de email desabilitada"

*/

// Fun√ß√£o para testar valida√ß√£o de email
async function testarValidacaoEmail() {
  const emailsParaTestar = [
    'joao@gmail.com',           // ‚úÖ V√°lido
    'maria@hotmail.com',        // ‚úÖ V√°lido
    'admin@camarize.com.br',    // ‚úÖ V√°lido
    'joao@',                    // ‚ùå Formato inv√°lido
    'emailinvalido',            // ‚ùå Formato inv√°lido
    'teste@dominioinexistente.com', // ‚ùå Dom√≠nio inexistente
    'joao@empresa.com'          // ‚ö†Ô∏è Pode ter aviso
  ];
  
  console.log('üß™ Testando valida√ß√£o de emails...\n');
  
  for (const email of emailsParaTestar) {
    try {
      console.log(`üìß Testando: ${email}`);
      
      // Simular requisi√ß√£o de cadastro
      const response = await fetch('/users/register', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          nome: 'Usu√°rio Teste',
          email: email,
          senha: '123456'
        })
      });
      
      const data = await response.json();
      
      if (response.ok) {
        console.log(`‚úÖ Sucesso: ${email}`);
      } else {
        console.log(`‚ùå Erro: ${data.error}`);
      }
      
      console.log('---');
      
    } catch (error) {
      console.log(`‚ùå Erro na requisi√ß√£o: ${error.message}`);
    }
  }
}

// Configura√ß√µes dispon√≠veis
const configuracoes = {
  // Habilitar/desabilitar valida√ß√£o
  VALIDATE_EMAIL_ON_REGISTER: 'true', // ou 'false'
  
  // N√≠veis de valida√ß√£o (no emailService)
  validacaoFormato: true,      // Sempre ativo
  validacaoDominio: true,      // Verifica MX
  validacaoSMTP: true,         // Tenta conectar
  
  // Comportamento
  bloquearCadastro: true,      // Se email inv√°lido
  permitirComAviso: true,      // Se n√£o conseguir verificar SMTP
  logDetalhado: true           // Logs no console
};

export {
  testarValidacaoEmail,
  configuracoes
};


