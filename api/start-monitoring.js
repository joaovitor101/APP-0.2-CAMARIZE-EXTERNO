import mongoose from 'mongoose';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

// Importar servi√ßos
import monitoringService from './services/monitoringService.js';

async function startMonitoring() {
  try {
    console.log('üîå Conectando ao MongoDB...');
    await mongoose.connect(process.env.MONGO_URL);
    console.log('‚úÖ Conectado ao MongoDB');

    console.log('\nüîß Verificando configura√ß√µes:');
    console.log('   - ENABLE_AUTO_MONITORING:', process.env.ENABLE_AUTO_MONITORING);
    console.log('   - EMAIL_USER:', process.env.EMAIL_USER);
    console.log('   - EMAIL_PASS:', process.env.EMAIL_PASS ? 'CONFIGURADO' : 'N√ÉO CONFIGURADO');

    if (!process.env.ENABLE_AUTO_MONITORING) {
      console.log('\n‚ö†Ô∏è Monitoramento autom√°tico n√£o est√° habilitado');
      console.log('   Adicione ENABLE_AUTO_MONITORING=true no arquivo .env');
    }

    console.log('\nüöÄ Iniciando monitoramento autom√°tico...');
    
    // Iniciar monitoramento
    monitoringService.startMonitoring(5); // Verificar a cada 5 minutos
    
    console.log('‚úÖ Monitoramento iniciado!');
    console.log('   - Verificando a cada 5 minutos');
    console.log('   - Alertas ser√£o enviados para: joaooficialkusaka@gmail.com');
    
    // Fazer uma verifica√ß√£o manual imediata
    console.log('\nüîç Executando verifica√ß√£o manual...');
    await monitoringService.manualCheck();
    
    console.log('\nüìä Status do monitoramento:');
    const status = monitoringService.getStatus();
    console.log('   - Rodando:', status.isRunning);
    console.log('   - √öltima verifica√ß√£o:', status.lastCheck);
    console.log('   - Pr√≥xima verifica√ß√£o:', status.nextCheck);

    console.log('\nüí° O monitoramento est√° ativo!');
    console.log('   - Quando detectar estados cr√≠ticos, enviar√° emails automaticamente');
    console.log('   - Para parar: Ctrl+C');

    // Manter o processo rodando
    process.on('SIGINT', () => {
      console.log('\n‚èπÔ∏è Parando monitoramento...');
      monitoringService.stopMonitoring();
      mongoose.disconnect();
      process.exit(0);
    });

  } catch (error) {
    console.error('‚ùå Erro:', error.message);
    await mongoose.disconnect();
  }
}

startMonitoring();
